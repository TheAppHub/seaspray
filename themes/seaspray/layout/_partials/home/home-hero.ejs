<% const hero = site.data.hero %>

<div class="relative min-h-screen">
	<!-- Hero Section with Background Image -->
	<div class="absolute inset-0 z-0">
		<div class="relative w-full h-full">
			<% hero.background_images.forEach(function(image, index) { %>
				<img
					src="<%- image %>"
					alt="Luxury Pool Design"
					class="hero-slide absolute inset-0 w-full h-full object-cover opacity-100 transition-all ease-in-out duration-[3000ms]"
					data-slide="<%- index + 1 %>"
					loading="<%- index === 0 ? 'eager' : 'lazy' %>"
				/>
			<% }); %>
			<div
				class="absolute inset-0 bg-gradient-to-r from-black/70 via-black/50 to-transparent md:from-black/65 md:via-black/50 md:to-transparent"
			></div>
		</div>
	</div>

	<!-- Content Section -->
	<div class="relative z-10 min-h-screen flex flex-col">
		<!-- Hero Content -->
		<div class="flex-1 flex items-center">
			<div class="container mx-auto px-4 py-16">
				<div class="max-w-3xl">
					<h1
						class="text-5xl md:text-6xl font-display font-bold text-white mb-6"
					>
						<%- hero.title %>
					</h1>
					<p class="text-xl md:text-2xl text-primary-200 mb-8">
						<%- hero.subtitle %>
					</p>
					<a
						href="<%- hero.cta_button.link %>"
						class="inline-block px-8 py-4 bg-primary-500 hover:bg-primary-400 text-white rounded-lg transition-colors"
					>
						<%- hero.cta_button.text %>
					</a>
				</div>
			</div>
		</div>

		<!-- Scroll Indicator -->
		<div class="absolute bottom-8 left-1/2 -translate-x-1/2">
			<a href="#home-intro">
				<div class="scroll-indicator"></div>
			</a>
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const slides = document.querySelectorAll(".hero-slide");
		let currentSlide = 1;
		const totalSlides = slides.length;
		const transitionDelay = 6000; // 6 seconds between transitions

		// Preload next image
		function preloadNextImage() {
			const nextSlideNum = (currentSlide % totalSlides) + 1;
			const nextSlide = document.querySelector(
				`[data-slide="${nextSlideNum}"]`,
			);
			if (nextSlide) {
				nextSlide.loading = "eager";
			}
		}

		function nextSlide() {
			// Hide current slide
			slides.forEach((slide) => {
				if (parseInt(slide.dataset.slide) === currentSlide) {
					slide.classList.remove("opacity-100");
					slide.classList.add("opacity-0");
				}
			});

			// Move to next slide
			currentSlide = (currentSlide % totalSlides) + 1;

			// Show next slide
			slides.forEach((slide) => {
				if (parseInt(slide.dataset.slide) === currentSlide) {
					slide.classList.remove("opacity-0");
					slide.classList.add("opacity-100");
				}
			});

			// Preload the next image
			preloadNextImage();
		}

		// Start the slideshow
		setInterval(nextSlide, transitionDelay);

		// Preload the second image initially
		preloadNextImage();
	});
</script>
